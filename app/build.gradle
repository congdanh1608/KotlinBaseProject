apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.apollographql.apollo'

apply plugin: "androidx.navigation.safeargs.kotlin"

// Add the Firebase Crashlytics plugin.
//apply plugin: 'com.google.firebase.crashlytics'


import com.android.build.OutputFile

def keystorePropertiesFile = rootProject.file("app/keystores/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.generateVersionName()

        //support vector drawables for android < 21
        vectorDrawables.useSupportLibrary = true

        //support multi Dex for large library
        multiDexEnabled true

        //support render script for android <19
        renderscriptTargetApi rootProject.ext.minSdkVersion
        renderscriptSupportModeEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //support data binding
    dataBinding {
        enabled = true
    }
    //increase build speed
    dexOptions {
        maxProcessCount 4
        javaMaxHeapSize "2g"
    }
    //enable java 8
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/*'
    }
    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file("keystores/debug.keystore")
            storePassword 'android'
        }
        release {
            storeFile file("keystores/keystore-release.jks")
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            resValue 'string', 'app_name', 'Kotlin Base - Debug'
        }
        release {
            debuggable false
            minifyEnabled false
//            shrinkResources true
//            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue 'string', 'app_name', 'Kotlin Base'
        }
    }
    productFlavors {
        develop {
            buildConfigField("String", "serverUrl", "\"http://157.230.113.97:3000/graphql\"")
            resValue 'string', 'domainAPI', 'https://animeloversapp.com:3000/api/'
            resValue 'string', 'facebookAppId', '641215556070654'

            flavorDimensions "default"
        }
        staging {
            buildConfigField("String", "serverUrl", "\"http://157.230.113.97:3000/graphql\"")
            resValue 'string', 'domainAPI', 'https://animeloversapp.com:3000/api/'
            resValue 'string', 'facebookAppId', '641215556070654'

            flavorDimensions "default"
        }
        production {
            buildConfigField("String", "serverUrl", "\"http://157.230.113.97:3000/graphql\"")
            resValue 'string', 'domainAPI', 'https://animeloversapp.com:3000/api/'
            resValue 'string', 'facebookAppId', '641215556070654'

            flavorDimensions "default"
        }
    }

    //split build by abi
    /*splits {
        // Configures multiple APKs based on ABI.
        abi {
            enable true                 // Enables building multiple APKs per ABI.
            reset()
            // Resets the list of ABIs that Gradle should create APKs for to none.

            // Specifies a list of ABIs that Gradle should create APKs for.
            //x86 (optional, very limited number of devices, like Asus Zenfone 2, Genym otion/ Android emulator)
            //x86_64 (optional, very limited number of devices, like Asus Zenfone 2, Genymotion/ Android emulator)
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            universalApk false
            // Specifies that we do not want to generate a universal APK that includes all ABIs.
        }
    }*/

    //split version code by abi
    applicationVariants.all {
        variant ->
            variant.outputs.each {
                output ->
                    //get app name
                    def appName
                    if (project.hasProperty("applicationName")) {
                        appName = applicationName
                    } else {
                        appName = parent.name
                    }
                    //get abi
                    def abiFilter = output.getFilter(OutputFile.ABI)
                    def abiMultiplier = 0
                    if (abiFilter != null) {
                        abiMultiplier = rootProject.ext.versionCodes.get(abiFilter)
                        output.outputFileName = "${appName}-${variant.productFlavors[0].name}-${abiFilter}-${generateVersionName()}.apk"
                    } else {
                        output.outputFileName = "${appName}-${variant.productFlavors[0].name}-${generateVersionName()}.apk"
                    }
                    output.versionCodeOverride = abiMultiplier * 1000 + android.defaultConfig.versionCode
            }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.2.1'
    implementation 'androidx.navigation:navigation-ui:2.2.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.1'
    implementation 'androidx.fragment:fragment:1.2.4'
    implementation 'androidx.fragment:fragment-ktx:1.2.4'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //social authentication
//    implementation project(':social_login')
    //glide
    implementation project(':custom_glide')

    //multiple dex
    implementation "androidx.multidex:multidex:2.0.1"

    //google
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation 'com.google.android.material:material:1.1.0'

    //google services
//    implementation "com.google.android.gms:play-services-location:$google_play_service_version"
//    implementation "com.google.firebase:firebase-core:$google_play_service_version"
//    implementation "com.google.firebase:firebase-analytics:$google_play_service_version"
//    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta01'

    //dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //rx
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    //apollo
    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-http-cache:$apollo_version"
    implementation "com.apollographql.apollo:apollo-rx2-support:$apollo_version"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    //gson
    implementation "com.google.code.gson:gson:2.8.5"

    //logger
    implementation "com.orhanobut:logger:2.2.0"

    //halcyon_logger
    implementation "com.lhalcyon:okhttp-logger-interceptor:1.0.2"
    implementation "com.squareup.okhttp3:okhttp:4.0.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.0.1"

    //dexter - permission requirement
    implementation "com.karumi:dexter:5.0.0"

    //hawk
    implementation "com.orhanobut:hawk:2.0.1"

    //location
    implementation 'pl.charmas.android:android-reactive-location2:2.1@aar'

    //avi refresh layout
    implementation "com.wang.avi:library:2.1.3"

    //snack bar
    implementation 'com.github.matecode:Snacky:1.0.3'

    //Calligraphy font
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    //event bus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //leak canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-2'

    //pretty time
    //implementation 'org.ocpsoft.prettytime:prettytime:4.0.2.Final'

    //Resizer for image
    //implementation 'com.github.hkk595:Resizer:v1.5'

    //Image picker
    implementation 'com.github.martin90s:ImagePicker:v1.3.2'

    //A library for avoiding TransactionTooLargeException during state saving and restoration. This issue may happen on Android 7
    implementation 'com.github.livefront:bridge:v1.2.1'

}

//apply plugin: 'com.google.gms.google-services'
